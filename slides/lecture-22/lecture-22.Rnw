\documentclass{beamer}
\usepackage{../371g-slides}
\title{Simulation 1}
\subtitle{Lecture 22}
\author{STA 371G}

\begin{document}
  <<setup, include=F, cache=F>>=
  opts_knit$set(global.par=T)
  knit_hooks$set(crop=hook_pdfcrop)
  opts_chunk$set(dev='tikz', external=F, fig.path='/tmp/figures/', comment=NA, fig.width=4, fig.height=3, crop=T, sanitize=T, tidy=F)
  knit_theme$set('camo')
  @
  <<include=F, cache=F>>=
  par(fg='#fefefe', col.axis='#fefefe', col.lab='#fefefe', col.main="#fefefe", mar=c(5.1, 4.1, 1.1, 2.1))
  @

  \frame{\maketitle}

  % Show outline at beginning of each section
  \AtBeginSection[]{
    \begin{frame}<beamer>
      \tableofcontents[currentsection]
    \end{frame}
  }

  %%%%%%% Slides start here %%%%%%%

  \begin{darkframes}
    \begin{frame}{What is simulation?}
      \begin{itemize}[<+->]
        \item When we have data, we can use regression models to predict an outcome based on input data that we know we will have available.
        \item However, sometimes we don't have the data we need to build a model, or we might want to understand the full range of possible outcomes rather than predicting a single outcome.
      \end{itemize}
    \end{frame}

    \begin{frame}{Examples of simulation}
      \begin{itemize}
        \item What will the value of my retirement portfolio look like in 30 years, and how does that depend on market conditions over that time span?
        \item What profit should I expect to see from a business selling team hats during the NBA playoffs, and how does that vary depending on who wins the playoffs and what kinds of hats I order?
        \item What sorts of returns are possible if I decide to drill for oil in a newly-discovered field, and how does that depend on my assumptions about drilling costs and the likelihood of success?
      \end{itemize}
    \end{frame}

    \begin{frame}{Simulation framework}
      \begin{enumerate}
        \item Define an quantity of interest that represents the outcome.
        \item Articulate a set of assumptions about the problem.
        \item Simulate the random processes that are inherent in determining the outcome.
        \item Compute the quantity of interest.
        \item Repeat steps 3-4 a large number of times, and examine the long-term distribution of the quantity.
      \end{enumerate}

      \pause

      We call this whole process the \alert{simulation}, and steps 3-4 a \alert{run} of the simulation.
    \end{frame}

    \begin{frame}{Example 1: Coin flipping}
      Suppose we flip a coin 10 times. What will the distribution of the number of heads look like?

      \pause

      \begin{itemize}[<+->]
        \item Let's define the random variable $H$ to be the number of heads.
        \item We assume that the probability of heads or tails is equal for each flip, and that each flip is independent.
      \end{itemize}
    \end{frame}

    \begin{frame}[fragile]{Random sampling in R}
      The \texttt{sample} function in R lets us randomly select from among several alternatives with equal probability. (We used this last week when we tested for ESP!)

      \bigskip

      To sample from the set $\{0,1\}$ 10 times, with replacement:

      <<>>=
      sample(c(0, 1), 10, replace=T)
      @
    \end{frame}

    \begin{frame}[fragile]{Replicating a run over and over}
      Every time we execute this run, we'll get a different answer. What we want to know is how often we'll get each answer---e.g., how often do we get 5 versus 6 versus 7?

      \bigskip\pause

      The \texttt{replicate} command lets us run a block of code repeatedly. Inside the code block, we run the \texttt{return} function to tell R what the quantity of interest is. For example, let's run our coin flipping run 15 times:

      <<>>=
      replicate(15, {
        flips <- sample(c(0, 1), 10, replace=T)
        return(sum(flips))
      })
      @
    \end{frame}

    \begin{frame}[fragile]{Replicating a run over and over}
      Why limit ourselves to 15 times? How about 100 times?
      \pause
      <<echo=F>>=
      options(width=54)
      @
      <<>>=
      replicate(100, {
        flips <- sample(c(0, 1), 10, replace=T)
        return(sum(flips))
      })
      @
    \end{frame}

    \begin{frame}{Examining the results of a simulation}
      Since computers are so fast, we'll often do a very large number of runs (e.g., 100,000 times) to even out the idiosyncrasies of any individual run due to randomness.

      \bigskip\pause

      But then we'll have a list of 100,000 numbers representing the result of 100,000 different runs, so we need a way of summarizing those results. To do this, we can look at a histogram of the results, or examine a summary statistic.
    \end{frame}

    \begin{frame}[fragile]
      <<fig.height=2.5>>=
      results <- replicate(100000, {
        flips <- sample(c(0, 1), 10, replace=T)
        sum(flips)
      })
      hist(results, breaks=10, col='orange')
      @
    \end{frame}

    \begin{frame}[fragile]
      Theory tells us that $H$, the outcome of flipping a fair coin 10 times and counting heads should follow a Binomial distribution with
      \[
        E(H) = np=10\cdot 0.5=5
      \]
      and
      \[
        \text{SD}(H) = \sqrt{np(1-p)}=\sqrt{10\cdot 0.5\cdot 0.5} \approx \Sexpr{round(sqrt(10*0.5*0.5), 2)}.
      \]

      \bigskip\pause

      Let's compare our simulated results against the theoretical results:
      <<>>=
      mean(results)
      sd(results)
      @
    \end{frame}

    \begin{frame}[fragile]{Simulating random variables}
      We have seen how the \texttt{sample} command can be used to draw from a set of alternatives with equal probability (e.g., flipping a coin).

      The \texttt{rnorm} command can be used to draw randomly from a normal distribution. Let's create 10 random heights, with mean 68 (inches) and SD 4.
      <<>>=
      rnorm(10, 68, 4)
      @
    \end{frame}

    \begin{frame}
      Let's check that \texttt{rnorm} works as advertised!

      <<>>=
      hist(rnorm(1000), col="orange")
      @
    \end{frame}

    \begin{frame}{Example 2: Will I get an A?}
      \begin{itemize}[<+->]
        \item Let's say I'm taking a class with two midterms (each 25\% weight in final grade) and a final exam (50\% weight in final grade).
        \item I just got my score on the first midterm (75\%).
        \item I want to know how likely it is that I can get 90\% or above on my final grade.
        \item This is hard!
      \end{itemize}
    \end{frame}

    \begin{frame}{Example 2: Will I get an A?}
      Let's start by making some assumptions:
      \begin{itemize}[<+->]
        \item I think I can improve on the second midterm, and then even more on the final.
        \item I'll model my Midterm 2 grade as a normal distribution.
        \item My best guess is that I'll get an 80\% on Midterm 2, and I'm 95\% sure it will be between 70\% and 90\%.
        \item So my Midterm 2 grade should be simulated as a normal distribution with mean 80 and SD 5 (since 95\% of a normal distribution is roughly $\pm 2$ SD from the mean).
        \item I think I can improve more on the final; my best guess is that I'll get a 90\%, and I'm 95\% sure I'll get between 80\% and 100\%.
      \end{itemize}
    \end{frame}

    \begin{frame}{Example 2: Will I get an A?}
      \begin{itemize}[<+->]
        \item For each run, we will:
          \begin{enumerate}[<+->]
            \item Randomly draw a Midterm 2 score from its normal distribution, and a Final Exam score from its normal distribution.
            \item Calculate a final score for the course, and see if it's over 90\%.
          \end{enumerate}
        \item Then we will count the percentage of runs where we got 90\%+ for the course. That will be our estimate of the probability of getting an A.
      \end{itemize}
    \end{frame}

    \begin{frame}[fragile]
      \fontsm
      <<fig.height=2.5>>=
      grades <- replicate(100000, {
        midterm1 <- 75
        midterm2 <- rnorm(1, mean=80, sd=5)
        final.exam <- rnorm(1, mean=90, sd=5)
        return(.25*midterm1 + 0.25*midterm2 + 0.5*final.exam)
      })
      hist(grades, col="orange")
      @
    \end{frame}

    \begin{frame}[fragile]
      \fontsm
      <<>>=
      runs <- replicate(100000, {
        midterm1 <- 75
        midterm2 <- rnorm(1, mean=80, sd=5)
        final.exam <- rnorm(1, mean=90, sd=5)
        return(0.25*midterm1 + 0.25*midterm2 + 0.5*final.exam >= 90)
      })
      sum(runs) / 100000
      @

      \pause
      There's only about a \Sexpr{round(sum(runs) / 100000 * 100, 2)}\% chance that I'll get an A.
    \end{frame}

    \begin{frame}{What if our assumptions are wrong?}
      \begin{itemize}[<+->]
        \item The problem with simulations is that the results can be very sensitive to our assumptions.
        \item To the extent that our assumptions are incorrect, we can't trust the results of the simulation. (``Garbage in, garbage out'')
        \item But the great thing about simulations is that it's easy to change the assumptions and see what effect it has on the results.
        \item For example, what if Midterm 2 is drawn from a normal distribution with mean 90, instead of mean 80?
      \end{itemize}
    \end{frame}

    \begin{frame}[fragile]
      \fontsm
      <<>>=
      runs <- replicate(100000, {
        midterm1 <- 75
        midterm2 <- rnorm(1, mean=90, sd=5)
        final.exam <- rnorm(1, mean=90, sd=5)
        return(0.25*midterm1 + 0.25*midterm2 + 0.5*final.exam >= 90)
      })
      sum(runs) / 100000
      @

      \pause
      Under this new assumption, there's an \Sexpr{round(sum(runs) / 100000 * 100, 2)}\% chance that I'll get an A.
    \end{frame}
  \end{darkframes}
\end{document}
